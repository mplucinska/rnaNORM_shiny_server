runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
View(nrormalized_all_data)
shiny::runApp()
normalized_all_data <- read_csv("~/Documents/UAM/CARD/rnaCARDapp_shiny/18S_new_rep1_all_data",
col_names = FALSE)
View(normalized_all_data)
library(readr)
X18S_new_rep1_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/18S_new_rep1_all_data",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(X18S_new_rep1_all_data)
normalized_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/18S_new_rep1_all_data",
" ", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
View(normalized_all_data)
normalized_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/18S_new_rep1_reactivity",
" ", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
View(normalized_all_data)
normalized_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/18S_new_rep1_all_data",
" ", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
View(normalized_all_data)
normalized_all_data$X7[normalized_all_data$X8 == "F"]
subset(normalized_all_data$X7 ,normalized_all_data$X8 == "F")
subset(normalized_all_data$X7 ,normalized_all_data$X8 == "F") <- 0
subset(normalized_all_data$X7 ,normalized_all_data$X8 == "F")
normalized_all_data$X7[normalized_all_data$X8 == "F"] <- 0
runApp()
runApp()
library(plotly)
packageVersion('plotly')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p <- plot_ly(normalized_all_data, x = ~X2, y = ~X7, type = 'bar')
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
normalized_all_data$colour <- ifelse(normalized_all_data$X7 < 0.3, "< 0.3","n")
normalized_all_data$colour <- ifelse(normalized_all_data$X7 < 0.6, "0.3 - 0.6","n")
normalized_all_data$colour <- ifelse(normalized_all_data$X7 < 0.9, "0.6 - 0.9","n")
normalized_all_data$colour <- ifelse(normalized_all_data$X7 < 1.2, "0.9 - 1.2","n")
normalized_all_data$colour <- ifelse(normalized_all_data$X7 > 1.2, "> 1.2","n")
if()
normalized_all_data$colour[normalized_all_data$X7 < 0.3] <- "< 0.3"
runApp()
normalized_all_data$colour[normalized_all_data$X7 < 0.3] <- "< 0.3"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
max(normalized_all_data$X3)
max(normalized_all_data$X3, (normalized_all_data$X3 )
)
max(normalized_all_data$X3,normalized_all_data$X3 )
max(normalized_all_data$X3,normalized_all_data$X4 )
max(normalized_all_data$X3,normalized_all_data$X5 )
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyBS")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bsExample("Collapses")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(ggplot2)
library(ggthemes)
library(shiny)
library(plotly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(normalized_all_data)
normalized_all_data$X5/normalized_all_data$X4
normalized_all_data$X3/normalized_all_data$X4
normalized_all_data$X5/normalized_all_data$X4
normalized_all_data$X5[1]/normalized_all_data$X4[1]
normalized_all_data$X5[2]/normalized_all_data$X4[2]
normalized_all_data$X4[2]/normalized_all_data$X4[2]
normalized_all_data$X3[2]/normalized_all_data$X4[2]
478.19517/832
runApp()
runApp()
runApp()
runApp()
70.1199/122
1636.32408/2847
log2(1636.32408/2847)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
wd()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
View(normalized_all_data)
runApp()
runApp()
runApp()
normalized_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/output_file_rnaPRE.txt",
" ", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
normalized_all_data <- read_delim("~/Documents/UAM/CARD/rnaCARDapp_shiny/output_file_rnaPRE.txt",
"\t", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
runApp()
runApp()
normalized_all_data$X7[normalized_all_data$X8 == "F"] <- 0
normalized_all_data$colour[normalized_all_data$X7 < 1.2] <- "0.9 - 1.2"
normalized_all_data$colour[normalized_all_data$X7 < 0.9] <- "0.6 - 0.9"
normalized_all_data$colour[normalized_all_data$X7 < 0.6] <- "0.3 - 0.6"
normalized_all_data$colour[normalized_all_data$X7 < 0.3] <- "< 0.3"
normalized_all_data$colour[normalized_all_data$X7 > 1.2] <-  "> 1.2"
normalized_all_data$log <- log2(normalized_all_data$X3 / normalized_all_data$X4)
normalized_all_data$log_norm <- log2(normalized_all_data$X5 / normalized_all_data$X4)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
normalized_all_data[,1,2,3 ]
normalized_all_data[,1-3 ]
normalized_all_data[1,]
normalized_all_data[,1]
normalized_all_data[,1-2]
normalized_all_data[,c(1,2)]
normalized_all_data[,c(1,2,3, 4)]
normalized_all_data[,c(1,2,7)]
runApp()
library(R4RNA)
install.packages("R4RNA")
source("https://bioconductor.org/biocLite.R")
biocLite("R4RNA")
y
library(devtools)
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'bajka')
library(updateR)
library(devtools)
install_github('andreacirilloac/updateR')
install_github('andreacirilloac/updateR', force = TRUE)
library(updateR)
